/** Points to a file */
export type InputFileInputUnion = InputFileIdInput
  | InputFileRemoteInput
  | InputFileLocalInput
  | InputFileGeneratedInput
  | InputFileBlobInput

/** A file defined by its unique ID */
export interface InputFileIdInput {
  _: 'inputFileId'
  /** Unique file identifier */
  id?: number
}

/**
 * A file defined by its remote ID. The remote ID is guaranteed to be usable only if
 * the corresponding file is still accessible to the user and known to TDLib. For example,
 * if the file is from a message, then the message must be not deleted and accessible
 * to the user. If the file database is disabled, then the corresponding object with
 * the file must be preloaded by the application
 */
export interface InputFileRemoteInput {
  _: 'inputFileRemote'
  /** Remote file identifier */
  id?: string
}

/** A file defined by a local path */
export interface InputFileLocalInput {
  _: 'inputFileLocal'
  /** Local path to the file */
  path?: string
}

/** A file generated by the application */
export interface InputFileGeneratedInput {
  _: 'inputFileGenerated'
  /**
   * Local path to a file from which the file is generated; may be empty if there is no
   * such file
   */
  originalPath?: string
  /**
   * String specifying the conversion applied to the original file; must be persistent
   * across application restarts. Conversions beginning with '#' are reserved for internal
   * TDLib usage
   */
  conversion?: string
  /** Expected size of the generated file, in bytes; 0 if unknown */
  expectedSize?: number
}

export interface InputFileBlobInput {
  _: 'inputFileBlob',
  /**
   * File name. Input file blob will be renamed
   */
  name: string,

  /** Blob file. Object that extended to Blob */
  data: any
}
